{
  "hash": "7aa2f2402727130ff292d032a0e68e34",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Dominik Haller\"\n---\n\n\n#Data Wrangling Challenges\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_910dab62b0a201d8a555ab90f60bfa20'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(vroom)\nlibrary(dplyr)\nlibrary(httr)\nlibrary(jsonlite)\n\n# Import Data \n\ncol_types <- list(\n  id = col_character(),\n  type = col_character(),\n  number = col_character(),\n  country = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  abstract = col_character(),\n  title = col_character(),\n  kind = col_character(),\n  num_claims = col_double(),\n  filename = col_character(),\n  withdrawn = col_double()\n)\n\npatent_tbl <- vroom(\n  file       = \"patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: type,\n#> number, country, abstract, title, kind, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\npatent_assignee <- vroom(\n  file = \"patent_assignee.tsv\",\n  delim = \"\\t\",\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 315910 Columns: 2\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \"\\t\"\n#> chr (2): patent_id, assignee_id\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nassignee <- vroom(\n  file = \"assignee.tsv\",\n  delim = \"\\t\",\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 47011 Columns: 3\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \"\\t\"\n#> chr (2): id, organization\n#> dbl (1): type\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nuspc <- vroom(\n  file = \"uspc.tsv\",\n  delim = \"\\t\",\n  col_types = list(\n    patent_id = col_character()\n  ),\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n# Join Tables\ndata <- left_join(patent_tbl, patent_assignee, by = c(\"id\" = \"patent_id\"))\ndata <- left_join(data, assignee, by = c(\"assignee_id\" = \"id\")) \n# Patent Dominance\ndominance <- data %>% \n  select(organization, num_claims) %>% \n  group_by(organization) %>% \n  summarise(claims = sum(num_claims))\ndominance_cleaned <- dominance[dominance$organization != 'NA',]\n\ndominance_sorted <- dominance_cleaned[order(dominance_cleaned$claims,decreasing=TRUE),]\n  \nhead(dominance_sorted, n=10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"claims\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"122231\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"91821\"},{\"1\":\"QUALCOMM Incorporated\",\"2\":\"87814\"},{\"1\":\"Google Inc.\",\"2\":\"54881\"},{\"1\":\"Microsoft Corporation\",\"2\":\"53989\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"51319\"},{\"1\":\"Sony Corporation\",\"2\":\"47985\"},{\"1\":\"Apple Inc.\",\"2\":\"44339\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"36149\"},{\"1\":\"General Electric Company\",\"2\":\"32531\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#Recent Patent Activity\naugust2014 <- data[format.Date(data$date, \"%m\")==\"08\" & !is.na(data$date),] %>% \n  select(organization, num_claims) %>% \n  group_by(organization) %>% \n  summarise(claims = sum(num_claims))\n\naugust2014_cleaned <- august2014[august2014$organization != 'NA',]\n\naugust2014_sorted <- august2014_cleaned[order(august2014_cleaned$claims,decreasing=TRUE),]\n\nhead(august2014_sorted,n=10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"claims\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"11568\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"8415\"},{\"1\":\"QUALCOMM Incorporated\",\"2\":\"7449\"},{\"1\":\"Microsoft Corporation\",\"2\":\"5487\"},{\"1\":\"Google Inc.\",\"2\":\"4958\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"4567\"},{\"1\":\"Sony Corporation\",\"2\":\"3954\"},{\"1\":\"Apple Inc.\",\"2\":\"3952\"},{\"1\":\"Telefonaktiebolaget LM Ericsson (Publ)\",\"2\":\"3347\"},{\"1\":\"Intel Corporation\",\"2\":\"3085\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#Innovation in Tech\ninno <- left_join(assignee, patent_assignee, by = c(\"id\" = \"assignee_id\"))\ninno <- left_join(inno, uspc, by = c(\"patent_id\" = \"patent_id\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in left_join(inno, uspc, by = c(patent_id = \"patent_id\")): Detected an unexpected many-to-many relationship between `x` and `y`.\n#> ℹ Row 1 of `x` matches multiple rows in `y`.\n#> ℹ Row 376875 of `y` matches multiple rows in `x`.\n#> ℹ If a many-to-many relationship is expected, set `relationship =\n#>   \"many-to-many\"` to silence this warning.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: One or more parsing issues, call `problems()` on your data frame for details,\n#> e.g.:\n#>   dat <- vroom(...)\n#>   problems(dat)\n```\n:::\n\n```{.r .cell-code}\ninno_cleaned <- inno[!duplicated(inno$patent_id),]\ninno_cleaned_2 <- inno_cleaned[inno_cleaned$id != 'NA',]\n\n#Create Filter from previous task\norgs <- head(dominance_sorted$organization, 10)\n\n#Apply Filter\ninno_orgs <- inno %>% \n  filter(organization %in% orgs) %>% \n  select(organization, mainclass_id) %>% \n  count(mainclass_id, sort = TRUE)\n\ninno_orgs_final <- inno_orgs[-1,] %>% \n  head(n=5)\n\ngetMainId <- function(x){\n  url <- sprintf('https://api.patentsview.org/uspc_mainclasses/query?q={\"uspc_mainclass_id\":%s}&f=[\"uspc_mainclass_title\"]',x[1])\n  resp <- GET(url)\n  content <- rawToChar(resp$content) %>% \n    fromJSON()\n  \n  class <- content[[\"uspc_mainclasses\"]][[1]]\n  return(class)\n}\n\nnames <- apply(inno_orgs_final,1,getMainId)\n\ninno_orgs_final %>% \n  mutate(type = names) %>% \n  head(n=5)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mainclass_id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"type\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"257\",\"2\":\"7395\",\"3\":\"Active solid-state devices (e.g., transistors, solid-state diodes)\"},{\"1\":\"455\",\"2\":\"5660\",\"3\":\"Telecommunications\"},{\"1\":\"370\",\"2\":\"4470\",\"3\":\"Multiplex communications\"},{\"1\":\"709\",\"2\":\"4149\",\"3\":\"Electrical computers and digital processing systems:  multicomputer data transferring\"},{\"1\":\"348\",\"2\":\"3784\",\"3\":\"Television\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
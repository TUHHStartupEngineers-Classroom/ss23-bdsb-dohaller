{
  "hash": "9ef10bce6af5f09b56c7b9fe83bcc51d",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Dominik Haller\"\n---\n\n\n# Covid Cases by Country\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_fb35ae7ac93b23d048d46d7a08ad437b'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Import Data\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 304424 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncountries <- covid_data_tbl %>%\n  group_by(location) %>% \n  group_split(.keep = TRUE)\n\n#Create Filter \nfilter <- c(\"Germany\", \"United States\", \"United Kingdom\", \"France\", \"Spain\")\n\n\ngetCountry <- function(x, country){\n  countries_select <- data.frame()\n  for(i in 1:length(x)){\n    if(x[[i]]$location[[1]] %in% country){\n      return (x[[i]])\n    } else {\n      next\n    }\n  }\n  return (countries_select)\n}\n#Grab Countries\nselection <- getCountry(countries, c(\"Germany\")) %>% \n  rbind(getCountry(countries, c(\"United States\"))) %>% \n  rbind(getCountry(countries, c(\"United Kingdom\"))) %>% \n  rbind(getCountry(countries, c(\"France\"))) %>% \n  rbind(getCountry(countries, c(\"Spain\")))\n \nselection %>% \n  ggplot(aes(date, total_cases, color = location))+\n  geom_line(linewidth = 1) + \n  scale_y_continuous(labels = scales::comma) +\n  theme(\n    legend.position = \"bottom\",\n  ) + \n  labs(\n    title = \"Total Covid Cases by country\",\n    subtitle = \"Sales Trending Upward\",\n    x = \"\",\n    y = \"Total Cases\",\n    color = \"Country\",\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 83 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#\n```\n:::\n\n# Covid Mortality\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_454c36d058c4a5b0a25ebcf024a394ff'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Import Data\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 304585 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#Prepare Data\ndata <- covid_data_tbl %>% \n  select(location, total_deaths) %>% \n  group_by(location) %>% \n  slice_max(order_by = total_deaths, n = 1) %>% \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %>%\n  distinct()\n#Remove unneeded rows\ndata <- data[!grepl(\"World\", data$location),]\ndata <- data[!grepl(\"income\", data$location),]\ndata <- data[!grepl(\"Europe\", data$location),]\ndata <- data[!grepl(\"North America\", data$location),]\ndata <- data[!grepl(\"South America\", data$location),]\ndata <- data[!grepl(\"Asia\", data$location),]\n\n#Import map\nworld <- map_data(\"world\")\n\np <- ggplot() +\n  geom_map(data = world, map = world,\n           aes(x = long, y = lat, group = group, map_id=region),\n           fill = \"white\", colour = \"#7f7f7f\", linewidth = 0.5) +\n  geom_map(data = data, map=world,\n           aes(fill=total_deaths, map_id=location, color = total_deaths),\n           colour=\"#7f7f7f\", linewidth=0.5)  +\n  scale_fill_continuous(low=\"red\", high=\"black\", guide=\"colorbar\") +\n  scale_y_continuous(breaks=c()) +\n  scale_x_continuous(breaks=c()) +\n  labs(fill=\"legend\", title=\"Covid Mortality\", x=\"\", y=\"\") +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_map(data = world, map = world, aes(x = long, y = lat, group =\n#> group, : Ignoring unknown aesthetics: x and y\n```\n:::\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}